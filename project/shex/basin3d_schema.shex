BASE <https://w3id.org/cmungall/basin3d_schema/>
PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>
PREFIX xsd: <http://www.w3.org/2001/XMLSchema#>
PREFIX linkml: <https://w3id.org/linkml/>
PREFIX schema: <http://schema.org/>
PREFIX sorep: <http://sweetontology.net/repr/>
PREFIX sorepscd: <http://sweetontology.net/reprSpaceCoordinate/>


linkml:String xsd:string

linkml:Integer xsd:integer

linkml:Boolean xsd:boolean

linkml:Float xsd:float

linkml:Double xsd:double

linkml:Decimal xsd:decimal

linkml:Time xsd:dateTime

linkml:Date xsd:date

linkml:Datetime xsd:dateTime

linkml:DateOrDatetime linkml:DateOrDatetime

linkml:Uriorcurie IRI

linkml:Uri IRI

linkml:Ncname xsd:string

linkml:Objectidentifier IRI

linkml:Nodeidentifier NONLITERAL

<AbsoluteCoordinate> CLOSED {
    (  $<AbsoluteCoordinate_tes> (  &<Base_tes> ;
          rdf:type [ <Base> ] ? ;
          <vertical_extent> @<AltitudeCoordinate> * ;
          <horizontal_position> @<GeographicCoordinate> *
       ) ;
       rdf:type [ <AbsoluteCoordinate> ] ?
    )
}

<AltitudeCoordinate> CLOSED {
    (  $<AltitudeCoordinate_tes> (  &<VerticalCoordinate_tes> ;
          rdf:type [ sorepscd:VerticalCoordinate ] ? ;
          <datum> @<AltitudeCoordinateDatumEnum> ?
       ) ;
       rdf:type [ <AltitudeCoordinate> ] ?
    )
}

<Base>  (
    CLOSED {
       (  $<Base_tes> (  &<JSONSerializable_tes> ;
             rdf:type [ <JSONSerializable> ] ?
          ) ;
          rdf:type [ <Base> ] ?
       )
    } OR @<AbsoluteCoordinate> OR @<Coordinate> OR @<Feature> OR @<HorizontalCoordinate> OR @<Observation> OR @<Person> OR
    @<RelatedSamplingFeature> OR @<RepresentativeCoordinate> OR @<VerticalCoordinate>
)

<Coordinate> CLOSED {
    (  $<Coordinate_tes> (  &<Base_tes> ;
          rdf:type [ <Base> ] ? ;
          <representative> @<RepresentativeCoordinate> ? ;
          <absolute> @<AbsoluteCoordinate> ?
       ) ;
       rdf:type [ sorep:Coordinate ] ?
    )
}

<DataSource> CLOSED {
    (  $<DataSource_tes> (  &<JSONSerializable_tes> ;
          rdf:type [ <JSONSerializable> ] ? ;
          <id_prefix> @linkml:String ? ;
          <credentials> @linkml:String ? ;
          <name> @linkml:String ? ;
          <id> @linkml:String ? ;
          <location> @linkml:String ?
       ) ;
       rdf:type [ <DataSource> ] ?
    )
}

<DepthCoordinate> CLOSED {
    (  $<DepthCoordinate_tes> (  &<VerticalCoordinate_tes> ;
          rdf:type [ sorepscd:VerticalCoordinate ] ? ;
          <datum> @<DepthCoordinateDatumEnum> ?
       ) ;
       rdf:type [ <DepthCoordinate> ] ?
    )
}

<Feature>  (
    CLOSED {
       (  $<Feature_tes> (  &<Base_tes> ;
             rdf:type [ <Base> ] ? ;
             <feature_type> @linkml:String ? ;
             <description> @linkml:String ? ;
             <name> @linkml:String ? ;
             <id> @linkml:String ? ;
             <observed_property_variables> @linkml:String *
          ) ;
          rdf:type [ <Feature> ] ?
       )
    } OR @<SamplingFeature>
)

<GeographicCoordinate> CLOSED {
    (  $<GeographicCoordinate_tes> (  &<HorizontalCoordinate_tes> ;
          rdf:type [ sorepscd:HorizontalCoordinate ] ? ;
          <units> @linkml:String ?
       ) ;
       rdf:type [ <GeographicCoordinate> ] ?
    )
}

<HorizontalCoordinate>  (
    CLOSED {
       (  $<HorizontalCoordinate_tes> (  &<Base_tes> ;
             rdf:type [ <Base> ] ? ;
             <type> @<HorizontalCoordinateTypeEnum> ? ;
             <datum> @<HorizontalCoordinateDatumEnum> ? ;
             <x> @linkml:Float ? ;
             <y> @linkml:Float ?
          ) ;
          rdf:type [ sorepscd:HorizontalCoordinate ] ?
       )
    } OR @<GeographicCoordinate>
)

<JSONSerializable>  (
    CLOSED {
       (  $<JSONSerializable_tes> rdf:type . * ;
          rdf:type [ <JSONSerializable> ] ?
       )
    } OR @<Base> OR @<DataSource> OR @<ObservedProperty> OR @<ObservedPropertyVariable>
)

<MeasurementMetadataMixin> {
    (  $<MeasurementMetadataMixin_tes> (  <statistic> @linkml:String ? ;
          <observed_property_variable> @linkml:String ?
       ) ;
       rdf:type [ <MeasurementMetadataMixin> ] ?
    )
}

<MeasurementResultMixin> {
    (  $<MeasurementResultMixin_tes> (  <unit_of_measurement> @linkml:String ? ;
          <result_value> @linkml:Float ?
       ) ;
       rdf:type [ <MeasurementResultMixin> ] ?
    )
}

<MeasurementTimeseriesTVPObservation> CLOSED {
    (  $<MeasurementTimeseriesTVPObservation_tes> (  &<Observation_tes> ;
          rdf:type [ <Observation> ] ? ;
          &<TimeMetadataMixin_tes> ;
          rdf:type [ <TimeMetadataMixin> ] ? ;
          &<MeasurementMetadataMixin_tes> ;
          rdf:type [ <MeasurementMetadataMixin> ] ? ;
          &<MeasurementTimeseriesTVPResultMixin_tes> ;
          rdf:type [ <MeasurementTimeseriesTVPResultMixin> ] ? ;
          <aggregation_duration> @<TimeFrequencyEnum> ? ;
          <time_reference_position> @<TimeMetadataMixinReferenceEnum> ? ;
          <statistic> @linkml:String ? ;
          <observed_property_variable> @linkml:String ? ;
          <unit_of_measurement> @linkml:String ? ;
          <result_points> @<TimeValuePair> *
       ) ;
       rdf:type [ <MeasurementTimeseriesTVPObservation> ] ?
    )
}

<MeasurementTimeseriesTVPResultMixin> {
    (  $<MeasurementTimeseriesTVPResultMixin_tes> (  <unit_of_measurement> @linkml:String ? ;
          <result_points> @<TimeValuePair> *
       ) ;
       rdf:type [ <MeasurementTimeseriesTVPResultMixin> ] ?
    )
}

<MonitoringFeature> CLOSED {
    (  $<MonitoringFeature_tes> (  &<SpatialSamplingFeature_tes> ;
          rdf:type [ <SpatialSamplingFeature> ] ? ;
          <related_party> @<Person> * ;
          <description_reference> @linkml:String ? ;
          <utc_offset> @linkml:Integer ?
       ) ;
       rdf:type [ <MonitoringFeature> ] ?
    )
}

<Observation>  (
    CLOSED {
       (  $<Observation_tes> (  &<Base_tes> ;
             rdf:type [ <Base> ] ? ;
             <feature_of_interest_type> @<FeatureTypeEnum> ? ;
             <result_quality> @<ResultQualityEnum> ? ;
             <utc_offset> @linkml:Integer ? ;
             <feature_of_interest> @<MonitoringFeature> ? ;
             <observed_property> @<ObservedProperty> ? ;
             <phenomenon_time> @linkml:String ? ;
             <id> @linkml:String ? ;
             <type> @<ObservationDatumEnum> ?
          ) ;
          rdf:type [ <Observation> ] ?
       )
    } OR @<MeasurementTimeseriesTVPObservation>
)

<ObservedProperty> CLOSED {
    (  $<ObservedProperty_tes> (  &<JSONSerializable_tes> ;
          rdf:type [ <JSONSerializable> ] ? ;
          <datasource_variable> @linkml:String ? ;
          <observed_property_variable> @<ObservedPropertyVariable> ? ;
          <sampling_medium> @linkml:String ? ;
          <datasource_description> @linkml:String ? ;
          <datasource> @<DataSource> ?
       ) ;
       rdf:type [ <ObservedProperty> ] ?
    )
}

<ObservedPropertyVariable> CLOSED {
    (  $<ObservedPropertyVariable_tes> (  &<JSONSerializable_tes> ;
          rdf:type [ <JSONSerializable> ] ? ;
          <basin3d_id> @linkml:String ? ;
          <units> @linkml:String ? ;
          <categories> @linkml:String * ;
          <full_name> @linkml:String ?
       ) ;
       rdf:type [ <ObservedPropertyVariable> ] ?
    )
}

<Person> CLOSED {
    (  $<Person_tes> (  &<Base_tes> ;
          rdf:type [ <Base> ] ? ;
          schema:email @linkml:String ? ;
          <last_name> @linkml:String ? ;
          <institution> @linkml:String ? ;
          <first_name> @linkml:String ? ;
          <role> @linkml:String ?
       ) ;
       rdf:type [ <Person> ] ?
    )
}

<RelatedSamplingFeature> CLOSED {
    (  $<RelatedSamplingFeature_tes> (  &<Base_tes> ;
          rdf:type [ <Base> ] ? ;
          <role> @linkml:String ? ;
          <related_sampling_feature_type> @linkml:String ? ;
          <related_sampling_feature> @<SamplingFeature> ?
       ) ;
       rdf:type [ <RelatedSamplingFeature> ] ?
    )
}

<RepresentativeCoordinate> CLOSED {
    (  $<RepresentativeCoordinate_tes> (  &<Base_tes> ;
          rdf:type [ <Base> ] ? ;
          <representative_point> @<AbsoluteCoordinate> ? ;
          <vertical_position> @<DepthCoordinate> ? ;
          <representative_point_type> @<RepresentativePointEnum> ?
       ) ;
       rdf:type [ <RepresentativeCoordinate> ] ?
    )
}

<SamplingFeature>  (
    CLOSED {
       (  $<SamplingFeature_tes> (  &<Feature_tes> ;
             rdf:type [ <Feature> ] ? ;
             <related_sampling_feature_complex> @<SamplingFeature> *
          ) ;
          rdf:type [ <SamplingFeature> ] ?
       )
    } OR @<SpatialSamplingFeature>
)

<SpatialSamplingFeature>  (
    CLOSED {
       (  $<SpatialSamplingFeature_tes> (  &<SamplingFeature_tes> ;
             rdf:type [ <SamplingFeature> ] ? ;
             <shape> @linkml:String ? ;
             <coordinates> @<Coordinate> ?
          ) ;
          rdf:type [ <SpatialSamplingFeature> ] ?
       )
    } OR @<MonitoringFeature>
)

<TimeMetadataMixin> {
    (  $<TimeMetadataMixin_tes> (  <aggregation_duration> @<TimeFrequencyEnum> ? ;
          <time_reference_position> @<TimeMetadataMixinReferenceEnum> ?
       ) ;
       rdf:type [ <TimeMetadataMixin> ] ?
    )
}

<TimeValuePair> CLOSED {
    (  $<TimeValuePair_tes> (  <timestamp> @linkml:String ? ;
          <value> @linkml:String ?
       ) ;
       rdf:type [ <TimeValuePair> ] ?
    )
}

<VerticalCoordinate>  (
    CLOSED {
       (  $<VerticalCoordinate_tes> (  &<Base_tes> ;
             rdf:type [ <Base> ] ? ;
             <encoding_method> @<VerticalCoordinateEncodingEnum> ? ;
             <value> @linkml:Float ? ;
             <distance_units> @<VerticalCoordinateDistanceEnum> ? ;
             <type> @<VerticalCoordinateTypeEnum> ? ;
             <datum> @linkml:String ? ;
             <resolution> @linkml:Float ?
          ) ;
          rdf:type [ sorepscd:VerticalCoordinate ] ?
       )
    } OR @<AltitudeCoordinate> OR @<DepthCoordinate>
)


